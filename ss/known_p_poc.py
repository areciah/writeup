from Crypto.Util.number import long_to_bytes

# 주어진 값
ct = 0xaa8d00c8574230d1b423d23a800c4ad97714e15cd900626e91615da240cda8c39ee4b97f23ccc47f2b98827729bb2ffa32d1f90d6c97bb7e5cb9492a4767afdc505fd687a87627ac13e93bfb2f46accb94629a36baad296e8faf8c51e9ef9266397713689cbb4dff3b28e0bc3a2a7c44ed99c6b6ea68083c5924473303aa297108045ca12a9c00d6ff8cdcc6b30784e97669c7ef6420f93cc189f28d309d71e07282f97c120b7c44550f73fefcfbf74a39aa4be4a7ac4cea2b97114063355d2e6ee17ecde7c41705d10e8087b480703304a4715e62ee5b92b9bdee7a2c9a04ee2cb08bca873223830320ac0f54b6dfc53c3d4d52d6248fa32f7b9e555c15e2d32d2c3e8314f1cbde3cd0a14daa48a713c6b3bb2c3b9f85ce52d2c4c029b8205ffb6aaa0b7a34a07286c9e74ef35e1ededc7285623d11264f64f7c93fd34ef39de4cc917ca5e1c8de0ec9c1bacdea46848fb7d826a4f4043e9e0c580ef4f6d84430a8ab9f1db28a73bb55d6027c3bb93af2ec1c527461311b66b36c1c631842d4b560d2e6c2239d779c437f9307223be3fc04516fcc98910bfc00f82546e4ddf2a3532f356056fbdc6dfb1e7ad56546b47e084b61914dd206977dd4e184c541131a8d614fa43e30e4639eeab9f3a9319b0e6dc50e4ab082534003ecb44b7f7d38d21a9e5cd829ee11170d543ad9123d56678ede890558ae4cefc3df923e3c77f
e = 0x10001
n = 0xbc31856fa1a2e1b5d036abd5df4cf0323a0ffee0d491a4d6574f0aff282b87bcfa8b10876047d6129910d4f9006cb6ecbb46af5c2122aa99923d024e8706f359ecb90cef18cc64d262fa24cb87ef13fde930d217088ffc90f7653e88875bf8bb98019c4c4a24d5681e01825581d42f3b4bda3af462d7f4496f30da1b74f960519f419bbc04f81120e9570b0b07515843ac53e86db22d77cf2470c15d531732f66eb0d312e95b92254e739582331f8209d82272edffd5d606f00f65bb1fff44d5baabbd55c272c0772950df199857155d90b11357dd0241c79c77f1bc36dd3f57268cc5185c1ee21d0683c3cac3cac20848be79a44420fb46afab13ba1bde2be432a593d78424c8278deff03200a41dd501f69ed4cd93f25deb7ae7dbff6a2d57ca667a6b53f262c690f4e755c97a11edfb9ebd6d411406f44f5edb0cbc209d23af4112a1b27cfa857411e99c2ba6bf5771a2df73e50b28a5854bd568cd1ad88f17b997f0d51ff407a73d6cce266fc3f864361a416a163a01f4787500ca80921b56121b29d107a3879105c2f3fce148f5faea2acf235d919599b5ee0a49ae5830d3bc52b78ac9b187dd73b31177550b75ea015f6762ee9e4b4eb1cf12f27def58909f751e7704faeb13d6aabcc2a9a0daf67a3b12c0bdf3f70532933a0c8ad67a0c690f51f4e70ecf7cdf8c63189b49e33d43ad99d4f2bfb6c3cbe2e3bea3bc79
p = 0xeff955b445976e329d6de870a15f9d2412d9cd7bf5a753866ae7b9a9028c1fcd55f2a8395ca4c0d8d714aec5913bd77a4a6526dcffb6e97644052a45486c3d1a1f11f543ced612731d2ee4ce6746a9a5b6188923f8c6e9ef50328b34bed87bad27da31b8f4eedf1215f947ec4f8765d14298bc3743c7e8b35f54746b0aae70c7e507883689475165dc191fdeb42f821a12db2d4a6603bff9d9f182de3060d090de95e313bef15dafffc9dbd56458ce8618ea2782b3cf701b88acfa269a6f77c8887a5aad597e1577ff0d0496d26bd45f54482cd2fec6aa19fb53450809d0dfbc8cb936ab94cc1aa4caf46d62fd0c4b8925a64e35a91b229ff51ee983f7bec7dd

# q 계산 (n = p * q 이므로 q = n // p)
q = n // p

# phi 계산: phi = (p-1)(q-1)
phi = (p - 1) * (q - 1)

# d 계산: d = e^(-1) mod phi (modular multiplicative inverse)
def mod_inverse(a, m):
    def extended_gcd(a, b):
        if a == 0:
            return b, 0, 1
        gcd, x1, y1 = extended_gcd(b % a, a)
        x = y1 - (b // a) * x1
        y = x1
        return gcd, x, y
    
    _, x, _ = extended_gcd(a, m)
    return (x % m + m) % m

d = mod_inverse(e, phi)

# 복호화: flag = ct^d mod n
flag_long = pow(ct, d, n)

# 바이트로 변환
flag = long_to_bytes(flag_long)

# 결과 출력
print("복호화된 flag:", flag.decode())